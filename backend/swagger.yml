swagger: "2.0"
info:
  description: This is the swagger file that goes with our server code
  version: "1.0.0"
  title: Swagger REST Article
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

# Paths supported by the server application
paths:
  /connect/{ip}/{user}/{pw}:
    get:
      operationId: connect_robot.check_ip_connection
      tags:
        - connect
      summary: Check if IP address is accessible
      description: Check if IP address
      parameters:
        - name: ip
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: user
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: pw
          in: path
          description: IP address given by user
          type: string
          required: True
      responses:
        200:
          description: Successfully read all entries

  /runscript/{ip}/{user}/{pw}/{picklepath}/{modelname}/{session}:
    get:
      operationId: connect_robot.run_script
      tags:
        - connect
      summary: Check if IP address is accessible
      description: Check if IP address
      parameters:
        - name: ip
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: user
          in: path
          description: robot user
          type: string
          required: True
        - name: pw
          in: path
          description: pw given by user
          type: string
          required: True
        - name: picklepath
          in: path
          description: path to model
          type: string
          required: True
        - name: modelname
          in: path
          description: model name given by user
          type: string
          required: True
        - name: session
          in: path
          description: session id
          type: string
          required: True
      responses:
        200:
          description: Successfully read all entries

  /robotdata/list/{ip}/{user}/{pw}:
    get:
      operationId: robot_data.read_all
      tags:
        - robotdata
      description: List of available csv data from robot
      parameters:
        - name: ip
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: user
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: pw
          in: path
          description: IP address given by user
          type: string
          required: True
      responses:
        200:
          description: Successfully read all entries

  /robotdata/file/{ip}/{user}/{pw}/{filename}:
    get:
      operationId: robot_data.read_file
      tags:
        - robotdata
      description: Get specific csv file from robot
      parameters:
        - name: ip
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: user
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: pw
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: filename
          in: path
          description: name of csv file
          type: string
          required: True
      responses:
        200:
          description: Successfully read all entries

  /robotdata/delimiter/{ip}/{user}/{pw}/{filename}:
    get:
      operationId: robot_data.get_delimiter
      tags:
        - robotdata
      description: Get correct delimiter for specific csv file
      parameters:
        - name: ip
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: user
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: pw
          in: path
          description: IP address given by user
          type: string
          required: True
        - name: filename
          in: path
          description: name of csv file
          type: string
          required: True
      responses:
        200:
          description: Successfully read all entries

  /plot/{csv}/{delimiter}/{session}/{features}/{labels}/{problem}:
    get:
      operationId: plot_data.plot
      tags:
        - plot_data
      summary: Get plot for a csv file
      description: Get plot for a csv file
      parameters:
        - name: csv
          in: path
          description: csv file
          type: string
          required: True
        - name: delimiter
          in: path
          type: string
          required: True
        - name: session
          in: path
          type: string
          required: True
        - name: features
          in: path
          type: string
          required: True
        - name: labels
          in: path
          type: string
          required: True
        - name: problem
          in: path
          type: string
          required: True
      responses:
        200:
          description: Successfully read all entries

  /heatmap/{csv}/{delimiter}/{session}:
    get:
      operationId: plot_data.heatmap
      tags:
        - plot_data
      summary: Get plot for a csv file
      description: Get plot for a csv file
      parameters:
        - name: csv
          in: path
          description: csv file
          type: string
          required: True
        - name: delimiter
          in: path
          type: string
          required: True
        - name: session
          in: path
          type: string
          required: True
      responses:
        200:
          description: Successfully read all entries

  /data/{session_id}:
    get:
      operationId: data.read_relevant
      tags:
        - data
      summary: read all data for ml models
      description: Read all entries in db
      parameters:
        - name: session_id
          in: path
          description: Robot name of the code to get from the list
          type: string
          required: True
      responses:
        200:
          description: Successfully read all entries

  /data:
    post:
      operationId: data.create
      tags:
        - data
      summary: create data in db
      description: create data in db
      parameters:
        - name: data
          in: body
          description: data to create
          required: True
          schema:
            type: object
            properties:
              session_id:
                type: string
              data_name:
                type: string
                description: name
              csv:
                type: string
                description: altered csv data
              scale:
                type: string
              shuffle:
                type: boolean
              test:
                type: integer
              train:
                type: integer
              delimiter:
                type: string
              labels:
                type: array
                items:
                  type: integer
      responses:
        201:
          description: Successfully created robot in list

  /runcode/classification/{code}/{session}:
    get:
      operationId: train_code.execute_classification_code
      tags:
        - train_code
      summary: execute code from Blockly and get back training results
      description: see summary
      parameters:
        - name: code
          in: path
          description: Code that should be executed
          type: string
          required: True
        - name: session
          in: path
          type: string
          required: True
      responses:
        200:
          description: Successfully executed code

  /runcode/regression/{code}/{session}:
    get:
      operationId: train_code.execute_regression_code
      tags:
        - train_code
      summary: execute code from Blockly and get back training results
      description: see summary
      parameters:
        - name: code
          in: path
          description: Code that should be executed
          type: string
          required: True
        - name: session
          in: path
          type: string
          required: True
      responses:
        200:
          description: Successfully executed code

  /runcode/image/{imagepath}/{timestamp}:
    get:
      operationId: train_code.send_image
      tags:
        - train_code
      summary: get images for model visualization
      description: see summary
      parameters:
        - name: imagepath
          in: path
          description: path to image
          type: string
          required: True
        - name: timestamp
          in: path
          description: unnecessary timestamp to prevent caching
          type: integer
          required: True
      responses:
        200:
          description: Successfully executed code

  /exampledata/list:
    get:
      operationId: example_data.read_all
      tags:
        - exmaple_data
      description: get example datasets from scikit learn lib
      responses:
        200:
          description: Successfully executed code

  /exampledata/file/{filename}:
    get:
      operationId: example_data.read_file
      tags:
        - exmaple_data
      description: get specific example csv from scikit lib
      parameters:
        - name: filename
          in: path
          description: name of csv file
          type: string
          required: True
      responses:
        200:
          description: Successfully executed code

  /predict/{Xnew}/{session_id}:
    get:
      operationId: predict_results.digit_prediction_for_robot
      tags:
        - digit_prediction_for_robot
      description: endpoint for robot to outsource model predition to backend
      parameters:
        - name: Xnew
          in: path
          description: input data
          type: string
          required: True
        - name: session_id
          in: path
          description: session id of frontend user to identify correct pickled model
          type: string
          required: True
      responses:
        200:
          description: Successfully predicted result

  /predict/ghost/{time}/{mode}/{session_id}:
    get:
      operationId: predict_results.ghost_prediction_for_robot
      tags:
        - ghost_prediction_for_robot
      description: endpoint for robot to outsource model predition to backend
      parameters:
        - name: time
          in: path
          description: input data
          type: string
          required: True
        - name: mode
          in: path
          description: one or two models
          type: string
          required: True
        - name: session_id
          in: path
          description: session id of frontend user to identify correct pickled model
          type: string
          required: True
      responses:
        200:
          description: Successfully predicted result